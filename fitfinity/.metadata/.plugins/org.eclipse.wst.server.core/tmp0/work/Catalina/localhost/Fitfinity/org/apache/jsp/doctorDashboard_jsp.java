/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-03-03 11:30:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import EditHistory.HistoryDAO;
import ViewPatientList.PListServlet;
import ViewPatientList.PatientListDAO;
import ViewPatientList.PatientInfo;
import java.util.List;
import ViewHistory.*;

public final class doctorDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("ViewHistory");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ViewPatientList.PatientListDAO");
    _jspx_imports_classes.add("EditHistory.HistoryDAO");
    _jspx_imports_classes.add("ViewPatientList.PatientInfo");
    _jspx_imports_classes.add("ViewPatientList.PListServlet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Doctor's Dashboard</title>\r\n");
      out.write("  <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("  <style>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      background-color: #f8f9fa;\r\n");
      out.write("    }\r\n");
      out.write("    a{\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("    .navbar {\r\n");
      out.write("      background-color: #0bb288;\r\n");
      out.write("      box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);\r\n");
      out.write("      padding: 10px 20px;\r\n");
      out.write("    }\r\n");
      out.write("    .navbar-brand {\r\n");
      out.write("      color: white !important;\r\n");
      out.write("      font-size: 2.25rem;\r\n");
      out.write("      margin-right: auto;\r\n");
      out.write("      padding-right: 33%;\r\n");
      out.write("    }\r\n");
      out.write("    .nav-link{\r\n");
      out.write("      color: white !important;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .navbar-toggler {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 21px; /* Adjust top position as needed */\r\n");
      out.write("      right: 20px; /* Adjust right position as needed */\r\n");
      out.write("      z-index: 1000; /* Ensure it's above other elements */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .container {\r\n");
      out.write("      margin-top: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    .dashboard-section {\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      margin-bottom: 20px;\r\n");
      out.write("      background-color: #fff;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n");
      out.write("    }\r\n");
      out.write("    .btn-primary {\r\n");
      out.write("      background-color: #0bb288 !important;\r\n");
      out.write("      border-color: #0bb288 !important;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("    .btn-primary:hover {\r\n");
      out.write("      background-color: #0f886a !important;\r\n");
      out.write("      border-color: #0f886a !important;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("    .btn-primary:active, .btn-primary:focus {\r\n");
      out.write("      background-color: #0f886a !important;\r\n");
      out.write("      border-color: #0f886a !important;\r\n");
      out.write("      box-shadow: none !important;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .btn-success {\r\n");
      out.write("      background-color: #0bb288;\r\n");
      out.write("      border-color: #0bb288;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("    .patient-container {\r\n");
      out.write("      max-height: 570px;\r\n");
      out.write("      overflow-y: auto;\r\n");
      out.write("    }\r\n");
      out.write("    .search-icon:hover {\r\n");
      out.write("      background-color: #0bb288 !important;\r\n");
      out.write("      border-color: #0bb288 !important;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("    .search-icon {\r\n");
      out.write("      transition: transform 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("    .search-icon:hover {\r\n");
      out.write("      transform: scale(1.2);\r\n");
      out.write("    }\r\n");
      out.write("    .search-icon:active {\r\n");
      out.write("      transform: scale(0.9);\r\n");
      out.write("    }\r\n");
      out.write("    .form-control:focus {\r\n");
      out.write("      outline: none;\r\n");
      out.write("      box-shadow: 0 0 5px 0 #0bb288;\r\n");
      out.write("      border-color: #0bb288;\r\n");
      out.write("    }\r\n");
      out.write("    .back-to-top {\r\n");
      out.write("      position: fixed;\r\n");
      out.write("      bottom: 40px;\r\n");
      out.write("      right: 40px;\r\n");
      out.write("      display: none;\r\n");
      out.write("      width: 40px;\r\n");
      out.write("      height: 40px;\r\n");
      out.write("      background-color: #0bb288;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      border-radius: 50%;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      line-height: 40px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      z-index: 9999;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    @media (max-width: 767.98px) {\r\n");
      out.write("    /* Adjust position for smaller screens */\r\n");
      out.write("    .back-to-top {\r\n");
      out.write("    bottom: 120px; /* Adjust as needed */\r\n");
      out.write("    }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .back-to-top i {\r\n");
      out.write("      font-size: 20px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .back-to-top:hover {\r\n");
      out.write("      background-color: #0f886a;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .patient-container .row {\r\n");
      out.write("	    margin-right: -15px;\r\n");
      out.write("	    margin-left: -15px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.patient-container .col-md-4 {\r\n");
      out.write("	    padding-right: 15px;\r\n");
      out.write("	    padding-left: 15px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	table {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("        border-collapse: collapse;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("        padding: 12px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        border-bottom: 1px solid #ddd; /* Add a subtle border between rows */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("        background-color: #0bb288;\r\n");
      out.write("        color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:nth-child(even) {\r\n");
      out.write("        background-color: #f8f9fa; /* Use a light background color for even rows */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:hover {\r\n");
      out.write("        background-color: #e0f7fa; /* Highlight the row on hover */\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .error-message {\r\n");
      out.write("            background-color: #ffcccc;\r\n");
      out.write("            color: #ff0000;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("            border: 1px solid #ff0000;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 String userid = (String) request.getAttribute("userId"); 
      out.write("\r\n");
      out.write("  <nav class=\"navbar navbar-expand-lg navbar-light\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"#\">Dashboard</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#appointment\">Appointment</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#income\">Income</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#medical-history\">Medical History</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("  <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ViewHistoryServlet\" method=\"post\">\r\n");
      out.write("  	<div class=\"row\">\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("      <div class=\"col-md-12\" id=\"medical-history\">\r\n");
      out.write("          \r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("              <div class=\"input-group mb-3\">\r\n");
      out.write("              	<input type=\"hidden\" name=\"userid\" value=\"");
      out.print( userid );
      out.write("\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"id\" placeholder=\"Search Patient Medical History\">\r\n");
      out.write("                <button style=\"border: none;\" type=\"submit\">\r\n");
      out.write("	                <div class=\"input-group-append\">\r\n");
      out.write("	                \r\n");
      out.write("	                  <span class=\"input-group-text\" style=\"background-color: #0bb288; border-color: #0bb288;\">\r\n");
      out.write("	                    <i class=\"fas fa-search search-icon\" style=\"color: white;\"></i>\r\n");
      out.write("	                  </span>\r\n");
      out.write("	                </div>\r\n");
      out.write("                </button>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("    ");
 ViewDAO daoo = new ViewDAO();
        String pid = (String) request.getAttribute("pid");
    	List<History> historyList = daoo.viewHistory(pid);
    	
    	if (pid!=null && !pid.isEmpty()) { 
          	if (historyList != null && !historyList.isEmpty()) { 
      out.write("\r\n");
      out.write("            <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Patient Name</th>\r\n");
      out.write("                <th>Doctor Name</th>\r\n");
      out.write("                <th>Date</th>\r\n");
      out.write("                <th>Allergies</th>\r\n");
      out.write("                <th>Surgical Procedures</th>\r\n");
      out.write("                <th>Past History</th>\r\n");
      out.write("                <th>Family History</th>\r\n");
      out.write("                <th>Medicine</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            \r\n");
      out.write("            ");
 for (History h : historyList) { 
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( h.getPatientName() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( h.getDoctorName() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( h.getDate() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( h.getAllergies() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( h.getSurgical() );
      out.write("</td>\r\n");
      out.write("                    ");
 String past = h.getPast();
                    	if(past.equals("None")){ 
      out.write("\r\n");
      out.write("                    		<td>");
      out.print( h.getCurrent() );
      out.write("</td>\r\n");
      out.write("                    	");
 } else { 
      out.write("\r\n");
      out.write("                    		<td>");
      out.print( h.getPast() );
      out.write(',');
      out.write(' ');
      out.print(h.getCurrent() );
      out.write("</td>\r\n");
      out.write("                    	");
 } 
      out.write("\r\n");
      out.write("                    <td>");
      out.print( h.getFamily() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( h.getMedicine() );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            <div class=\"error-message\">\r\n");
      out.write("                No medical history available for this patient.\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("        \r\n");
      out.write("    <br>\r\n");
      out.write("        \r\n");
      out.write("    \r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("      <div class=\"col-md-12\" id=\"appointment\">\r\n");
      out.write("            <div class=\"dashboard-section\">\r\n");
      out.write("            <h2>Appointment</h2>\r\n");
      out.write("            <!-- Add your content here for viewing appointments -->\r\n");
      out.write("            <div class=\"patient-container\">\r\n");
      out.write("			");
 
			   PatientListDAO dao = new PatientListDAO();
			   List<PatientInfo> list = dao.getPatientList(userid); 
			   
			   if (list != null && !list.isEmpty()) {
			       int count = 0; // Counter to keep track of patients
			       for (PatientInfo l : list) {
			           if (count % 3 == 0) {
			
      out.write("\r\n");
      out.write("			               <div class=\"row\">\r\n");
      out.write("			");

			           }
			
      out.write("\r\n");
      out.write("			               <div class=\"col-md-4\">\r\n");
      out.write("			                   <div class=\"card\">\r\n");
      out.write("			                       <div class=\"card-body\">\r\n");
      out.write("			                           <h5 class=\"card-title\">Patient Profile</h5>\r\n");
      out.write("			                           <p class=\"card-text\">ID: ");
      out.print( l.getPatientID() );
      out.write("</p>\r\n");
      out.write("			                           <p class=\"card-text\">Name: ");
      out.print( l.getPatientName() );
      out.write("</p>\r\n");
      out.write("			                           <p class=\"card-text\">Age: ");
      out.print( l.getAge() );
      out.write("</p>\r\n");
      out.write("			                           <p class=\"card-text\">Gender: ");
      out.print( l.getGender() );
      out.write("</p>\r\n");
      out.write("			                           \r\n");
      out.write("			                           \r\n");
      out.write("			                           ");
 String patientID = l.getPatientID();
			                           	  HistoryDAO hdao = new HistoryDAO();
			                           	  
			                           	  boolean isCompleted = hdao.checkCompleted(patientID);
			                           	  
			                           
      out.write("\r\n");
      out.write("										    \r\n");
      out.write("										<a href=\"");
      out.print( isCompleted ? "#" : "./AddHistory.jsp?userid=" + userid );
      out.write("&patientID=");
      out.print( patientID );
      out.write("\">\r\n");
      out.write("										   <button type=\"button\" class=\"btn btn-primary\" ");
      out.print( isCompleted ? "disabled" : "" );
      out.write(">\r\n");
      out.write("										      ");
      out.print( isCompleted ? "Completed" : "Edit Medical History" );
      out.write("\r\n");
      out.write("										   </button>\r\n");
      out.write("										</a>\r\n");
      out.write("										\r\n");
      out.write("										\r\n");
      out.write("			                           \r\n");
      out.write("			                       </div>\r\n");
      out.write("			                   </div>\r\n");
      out.write("			               </div>\r\n");
      out.write("			");

			           count++;
			           if (count % 3 == 0 || count == list.size()) {
			
      out.write("\r\n");
      out.write("			               </div>\r\n");
      out.write("			");

			           }
			       }
			   } else {
			
      out.write("\r\n");
      out.write("			       <p>No patients today.</p>\r\n");
      out.write("			");

			   }
			
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  	</div>\r\n");
      out.write("      \r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("      ");
      out.write("\r\n");
      out.write("      <div class=\"col-md-12\" id=\"income\">\r\n");
      out.write("        <div class=\"dashboard-section\">\r\n");
      out.write("          <h2>Income</h2>\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("             <a href=\"./dailySalary.jsp?userid=");
      out.print( userid );
      out.write("\">\r\n");
      out.write("              <button type=\"button\" class=\"btn btn-primary btn-block btn-income\">Daily Income</button>\r\n");
      out.write("             </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("            <a href=\"./monthlySalary.jsp?userid=");
      out.print( userid );
      out.write("&hash\">\r\n");
      out.write("              <button type=\"button\" class=\"btn btn-primary btn-block btn-income\">Monthly Income</button>\r\n");
      out.write("              </a>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("  <a href=\"#\" class=\"back-to-top\" id=\"backToTop\"><i class=\"fas fa-arrow-up\"></i></a>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("    // Smooth scrolling\r\n");
      out.write("    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n");
      out.write("      anchor.addEventListener('click', function (e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n");
      out.write("          behavior: 'smooth'\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Show back to top button when scrolling down\r\n");
      out.write("    window.addEventListener('scroll', function() {\r\n");
      out.write("      var backToTopButton = document.getElementById('backToTop');\r\n");
      out.write("      if (window.pageYOffset > 100) {\r\n");
      out.write("        backToTopButton.style.display = 'block';\r\n");
      out.write("      } else {\r\n");
      out.write("        backToTopButton.style.display = 'none';\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Scroll to top when back to top button is clicked\r\n");
      out.write("    document.getElementById('backToTop').addEventListener('click', function(e) {\r\n");
      out.write("      e.preventDefault();\r\n");
      out.write("      window.scrollTo({\r\n");
      out.write("        top: 0,\r\n");
      out.write("        behavior: 'smooth'\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
