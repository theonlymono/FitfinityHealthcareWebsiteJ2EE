package Booking;

import java.io.*;
import java.sql.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;

@WebServlet("/DeleteDoctorRecordsServlet")
public class DeleteDoctorRecordsServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Retrieve doctorID parameter from the form
        String doctorID = request.getParameter("doctorID");

        // Check if doctorID is empty
        if (doctorID == null || doctorID.isEmpty()) {
            response.sendRedirect("adminDashboard.jsp?error=DoctorID is required");
            return;
        }

        // Delete records associated with the given doctorID from the database
        Connection conn = null;
        PreparedStatement pstmt = null;
        try {
            // Load the MySQL JDBC driver
            Class.forName("com.mysql.jdbc.Driver");

            // Connect to the database
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/fitfinity", "root", "");

            // Prepare SQL statement for deletion
            String sql = "DELETE FROM doctorschedules WHERE doctorID = ?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, doctorID);

            // Execute the SQL statement
            int rowsAffected = pstmt.executeUpdate();
            if (rowsAffected > 0) {
                // Records deleted successfully
                response.sendRedirect("adminDashboard.jsp?success=Records for Doctor ID " + doctorID + " deleted successfully");
            } else {
                // No records found for the given doctorID
                response.sendRedirect("adminDashboard.jsp?error=No records found for Doctor ID " + doctorID);
            }
        } catch (Exception e) {
            e.printStackTrace();
            response.sendRedirect("adminDashboard.jsp?error=An error occurred while deleting records");
        } finally {
            // Close resources
            try {
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
}
